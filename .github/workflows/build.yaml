name: DockerHub Image CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:

  build:
 
    runs-on: ubuntu-18.04
 
    steps:
    - uses: actions/checkout@v2

    - name: decide on tag
      id: get_tag
      run: |
        tag=$(echo $GITHUB_REF | sed -e 's/refs\/heads\///g' -e 's/refs\/tags\///g' | sed -e 's/master/latest/g')
        echo "::debug::decide on image tag ${tag}"
        echo "::set-output name=tag::${tag}"

    - name: get ssm version
      id: get_ssm
      run: |
        version=${{ steps.get_tag.outputs.tag }}
        url=https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/${version}/linux_amd64/amazon-ssm-agent.rpm
        curl --output /dev/null --silent --head --fail "$url" || version=$(curl --silent https://api.github.com/repos/aws/amazon-ssm-agent/releases/latest | jq -r .tag_name)
        echo "::debug::get ssm version ${version}"
        echo "::set-output name=version::${version}"

    - name: set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: set up Docker buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: cache Docker layers
      uses: actions/cache@v2
      id: cache
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        build-args: SSM_VERSION=${{ steps.get_ssm.outputs.version }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        tags: ${{ secrets.DOCKER_USERNAME }}/aws-ssm-agent:${{ steps.get_ssm.outputs.version }}
        push: true

    
    - name: image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

 